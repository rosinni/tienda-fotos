{"version":3,"sources":["components/Search.js","components/Header.js","components/Card.js","components/Galeria.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Search","type","value","this","props","onChange","handleChange","placeholder","React","Component","Header","className","search","Card","cardImg","urlImg","nombre","precio","src","alt","Galeria","filtroCards","imagenes","filter","toLowerCase","indexOf","map","index","key","Footer","App","e","setState","target","state","bind","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"8NAeeA,E,uKAXP,OACI,2BACAC,KAAK,SACLC,MAAOC,KAAKC,MAAMF,MAClBG,SAAUF,KAAKC,MAAME,aACrBC,YAAY,e,GAPHC,IAAMC,WCkBZC,E,uKAfP,OAAQ,4BAAQC,UAAU,cACd,yBAAKA,UAAU,gBACX,+CAEJ,yBAAKA,UAAU,YACX,kBAAC,EAAD,CACAT,MAAOC,KAAKC,MAAMQ,OAClBN,aAAcH,KAAKC,MAAME,qB,GAT5BE,IAAMC,WCiBZI,E,uKAhBH,MAE8BV,KAAKC,MAAMU,QAAtCC,EAFH,EAEGA,OAAQC,EAFX,EAEWA,OAAQC,EAFnB,EAEmBA,OAEvB,OACI,yBAAKN,UAAU,QACX,yBAAKO,IAAKH,EAAQI,IAAI,KACtB,yBAAKR,UAAU,WACX,2BAAG,yCAAH,IAAyBK,GACzB,2BAAG,yCAAH,IAAyBC,EAAzB,c,GAXDT,IAAMC,WCgBVW,E,uKAdH,IAAD,OAEDC,EAAclB,KAAKC,MAAMkB,SAASC,QAAO,SAACT,GAAD,OAC8B,IAA3EA,EAAQE,OAAOQ,cAAcC,QAAQ,EAAKrB,MAAMQ,OAAOY,kBAEtD,OACI,yBAAKb,UAAU,YACdU,EAAYK,KAAI,SAACZ,EAAQa,GAAT,OAAiB,kBAAC,EAAD,CAAMb,QAASA,EAASc,IAAKD,Y,GARpDnB,IAAMC,WCUboB,E,uKARN,OACG,yBAAKlB,UAAU,OACX,iE,GALKH,IAAMC,WC6DZqB,E,kDAxDb,WAAY1B,GAAO,IAAD,8BAChB,cAAMA,IAQRE,aAAe,SAACyB,GACd,EAAKC,SAAS,CACVpB,OAAQmB,EAAEE,OAAO/B,SATrB,EAAKgC,MAAQ,CACTZ,SAAU,GACVV,OAAQ,IAEZ,EAAKN,aAAe,EAAKA,aAAa6B,KAAlB,gBANJ,E,gEAgBhBhC,KAAK6B,SAAS,CACVV,SAAU,CACN,CAACP,OAAQ,6GACTC,OAAQ,qBACRC,OAAQ,KACR,CAACF,OAAO,qGACRC,OAAQ,WACRC,OAAQ,KACR,CAACF,OAAO,+EACRC,OAAQ,YACRC,OAAQ,KACR,CAACF,OAAO,yGACRC,OAAQ,aACRC,OAAQ,KACR,CAACF,OAAO,sFACRC,OAAQ,eACRC,OAAQ,KACR,CAACF,OAAO,qEACRC,OAAQ,SACRC,OAAQ,U,+BAMhB,OACE,oCACA,kBAAC,EAAD,CACAL,OAAQT,KAAK+B,MAAMtB,OACnBN,aAAcH,KAAKG,eACnB,kBAAC,EAAD,CAASgB,SAAUnB,KAAK+B,MAAMZ,SAC9BV,OAAQT,KAAK+B,MAAMtB,OACnBN,aAAcH,KAAKG,eACnB,kBAAC,EAAD,W,GAlDYE,IAAMC,WCMJ2B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.415ace9f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Search extends React.Component{\r\n    render(){\r\n        return(\r\n            <input \r\n            type=\"search\"\r\n            value={this.props.value} \r\n            onChange={this.props.handleChange}  \r\n            placeholder=\"Buscar\"\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default Search;","import React from 'react';\r\nimport Search from './Search.js'\r\n\r\nclass Header extends React.Component{\r\n    render(){\r\n        return (<header className=\"encabezado\">\r\n                    <div className=\"texto-tienda\">\r\n                        <h1>Tienda Striata</h1>\r\n                            </div>\r\n                    <div className=\"buscador\">\r\n                        <Search \r\n                        value={this.props.search} \r\n                        handleChange={this.props.handleChange}\r\n                        />\r\n                    </div>\r\n               </header>\r\n               )\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nclass Card extends React.Component{\r\n \r\n    render(){\r\n        //Esto destructura las propiedades del objeto contenido en this.props para que sea menos verboso\r\n        const {urlImg, nombre, precio } = this.props.cardImg\r\n\r\n        return (\r\n            <div className=\"card\">\r\n                <img src={urlImg} alt=\"\"/>\r\n                <div className=\"caption\">\r\n                    <p><span>Imagen:</span> {nombre}</p>\r\n                    <p><span>Precio:</span> {precio} arg</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card.js'\r\n\r\nclass Galeria extends React.Component{\r\n   render(){\r\n\r\n      let filtroCards = this.props.imagenes.filter((cardImg) => \r\n      cardImg.nombre.toLowerCase().indexOf(this.props.search.toLowerCase()) !== -1 );\r\n\r\n       return(\r\n           <div className=\"imagenes\">\r\n           {filtroCards.map((cardImg,index)=><Card cardImg={cardImg} key={index}/>)}\r\n           </div>\r\n       );\r\n   }\r\n}\r\n\r\n\r\nexport default Galeria;","import React from 'react';\r\n\r\nclass Footer extends React.Component{\r\n    render(){\r\n       \r\n         return (\r\n            <div className=\"foo\">\r\n                <p>Todos los derechos reservados</p>\r\n            </div>)  \r\n      \r\n    }\r\n}\r\n\r\nexport default Footer;","import React from 'react';\nimport Header from './components/Header.js'\nimport Galeria from './components/Galeria.js'\nimport Footer from './components/Footer.js'\n\n\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n        imagenes: [],\n        search: ''\n        }\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange = (e) =>{\n    this.setState({\n        search: e.target.value\n     }) \n }\n\ncomponentDidMount(){\n    this.setState({\n        imagenes: [\n            {urlImg: 'https://loqueva.com/wp-content/uploads/2018/02/connor-surdi-fotograf%C3%ADa-paisajes-loqueva-1-200x200.jpg',\n            nombre: 'Bajo las estrellas', \n            precio: 900},\n            {urlImg:'https://natalia230.files.wordpress.com/2017/03/cropped-paisajes-bonitos-de-otoc3b1o-lago.jpg?w=200',\n            nombre: 'Oto√±o', \n            precio: 600},\n            {urlImg:'https://i.pinimg.com/originals/5f/41/b4/5f41b4c550b484160c8440a126c1799f.jpg',\n            nombre: 'Primavera',\n            precio: 200},\n            {urlImg:'https://i.blogs.es/681b1b/este-video-nos-descubre-los-bellos-cielos-de-desierto-de-atacama/200_200.jpg',\n            nombre: 'Via lactea',\n            precio: 400},\n            {urlImg:'https://www.cascarini.com/wp-content/uploads/2011/08/paisaje558-640x480-200x200.jpg',\n            nombre: 'Alpes suizos',\n            precio: 800},\n            {urlImg:'https://i.blogs.es/812f68/marc-adamus-ice-shadows-high/200_200.jpg',\n            nombre: 'Nevado',\n            precio: 600}\n            ]\n    })\n}\n\n  render(){\n    return (\n      <>\n      <Header \n      search={this.state.search} \n      handleChange={this.handleChange}/>\n      <Galeria imagenes={this.state.imagenes} \n      search={this.state.search} \n      handleChange={this.handleChange}/>\n      <Footer/>\n    </>\n    );\n\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}